[{"C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\index.js":"1","C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\App.js":"2","C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\reportWebVitals.js":"3","C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\Components\\diary.js":"4","C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\Components\\pay.js":"5"},{"size":500,"mtime":1609143908689,"results":"6","hashOfConfig":"7"},{"size":737,"mtime":1609238925816,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609143908690,"results":"9","hashOfConfig":"7"},{"size":5484,"mtime":1609238925818,"results":"10","hashOfConfig":"7"},{"size":1886,"mtime":1609318143655,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hptg0e",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\index.js",[],["26","27"],"C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\App.js",[],"C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\reportWebVitals.js",[],"C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\Components\\diary.js",["28","29","30","31","32","33","34","35","36"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Link from '@material-ui/core/Link';\nimport { Paper,Divider, CardActionArea } from '@material-ui/core';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"50px\",\n    marginLeft: \"50px\",\n    marginRight: \"50px\",\n    padding: \"50px\"\n  },\n  heading: {\n    fontWeight: \"bold\"\n  },\n  text: {\n    marginTop: \"10px\"\n  },\n  submit: {\n    marginTop: \"20px\",\n    marginBottom:\"20px\"\n  }\n}));\n\nexport default function Dairy(props) {\n  const classes = useStyles();\n\n  const [thoughts, setThoughts] = useState();\n  const [sentiment, setSentiment] = useState()\n  const [playlist, setPlaylist] = useState();\n  const [temp, setTemp] = useState(false);\n\n  const onChange = (e) => setThoughts(e.target.value)\n\n  const onClickHandler = async () => {\n    try {\n      console.log(thoughts)\n      var data = JSON.stringify({ \"message\": thoughts });\n\n      var config = {\n        method: 'post',\n        url: 'https://health-care-auto.herokuapp.com/api/spotify/playlist',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n\n      const response = await axios(config)\n      console.log(response.data)\n      console.log(response.data.playlist.playlists.items)\n      setPlaylist(response.data.playlist.playlists.items)\n      const hell = props.match.params.userId\n      console.log(hell)\n\n      const { scores, Summary, ent_list } = response.data.sentiment_data\n\n      setSentiment(response.data.sentiment_data)\n\n      console.log(scores, Summary, ent_list)\n      console.log(sentiment)\n      setTemp(true);\n      const diaryData = {\n        text: thoughts,\n        user: hell,\n        scores: scores,\n        Summary: Summary,\n        ent_list: ent_list\n      }\n\n      console.log(diaryData)\n\n      var config = {\n        method: 'post',\n        url: 'https://health-care-auto.herokuapp.com/api/diary/',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify(diaryData)\n      };\n\n      const res = await axios(config);\n\n      console.log(res)\n\n    } catch (error) {\n      //ider toast daal de na please\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.root} elevation={0} variant=\"outlined\" >\n        <Typography className={classes.heading} variant=\"h5\" color=\"primary\">Personal Diary</Typography>\n        <TextField\n          className={classes.text}\n          label=\"\"\n          required\n          variant=\"outlined\"\n          multiline\n          rows={23}\n          fullWidth\n          value={thoughts}\n          onChange={onChange}\n          placeholder=\"Something To Share?\" />\n        <Button\n          disableElevation\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClickHandler}\n          className={classes.submit}\n        >\n          Submit\n          </Button><br />\n          <Divider />\n          {temp?\n          <React.Fragment>\n            <Typography variant={\"h6\"} style={{\"fontWeight\":\"bold\"}}>Results</Typography>\n            <Card elevation={0} variant=\"outlined\">\n              <CardContent>\n              <Typography>\n                <span style={{\"fontWeight\":\"bold\"}}>Positive</span> - {sentiment.scores.pos}\n              </Typography>\n              <Typography>\n                <span style={{\"fontWeight\":\"bold\"}}>Negative</span> - {sentiment.scores.neg}\n              </Typography>\n              <Typography>\n                <span style={{\"fontWeight\":\"bold\"}}>Neutral</span> - {sentiment.scores.neu}\n              </Typography>\n              <Typography>\n                <span style={{\"fontWeight\":\"bold\"}}>OverAll</span> - {sentiment.scores.compound}\n              </Typography>\n              </CardContent>\n            </Card><br />\n            <Divider />\n            <Typography variant={\"h6\"} style={{\"fontWeight\":\"bold\"}}>Mood</Typography>\n            <React.Fragment>\n            {playlist.map((pl)=>{\n              return(\n                <Card variant=\"outlined\" elevation={0} style={{\"marginBottom\":\"10px\"}}>\n                  <CardActionArea onClick={() => { window.open(`${pl.external_urls.spotify}`) }}>\n                  <CardMedia\n                component=\"img\"\n                alt=\"playlist\"\n                height=\"150\"\n                image={pl.images[0].url}\n              />\n              <CardContent>\n                <Typography align=\"center\" style={{\"fontWeight\":\"bold\"}}>{pl.name}</Typography>\n              </CardContent>\n                  </CardActionArea>\n                </Card>\n              );\n            })}\n            </React.Fragment>\n          </React.Fragment>\n          :\n          null\n          }\n      </Paper>\n      \n    </React.Fragment>\n  );\n}\n\n\n",["37","38"],"C:\\Users\\Heth Gala\\Desktop\\HackNagpur\\Hack-Nagpur\\webview\\src\\Components\\pay.js",["39"],"import React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    // display: \"flex\",\n  },\n  button: {\n    marginLeft: \"25%\",\n    marginTop: \"20%\"\n  }\n\n\n}));\n\nconst Pay = () => {\n  const classes = useStyles();\n  const payment = async () => {\n    var config = {\n      method: 'post',\n      url: 'https://health-care-auto.herokuapp.com/api/pay/payment_order',\n      headers: {},\n    };\n\n    const res = await axios(config);\n    const order = res.data;\n    console.log(order);\n    const options = {\n      key: 'rzp_test_RJJUKEC7ow8MZc', // Enter the Key ID generated from the Dashboard\n      amount: order.data.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      currency: 'INR',\n      name: 'My Health',\n\n      order_id: order.data.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      handler: async function (res) {\n        var raw = JSON.stringify({\n          Payment_id: res.razorpay_payment_id,\n          Order_id: res.razorpay_order_id,\n          Payment_Signature: res.razorpay_signature,\n        });\n\n        console.log(res.razorpay_payment_id);\n        console.log(res.razorpay_order_id);\n        console.log(res.razorpay_signature);\n      },\n\n      theme: {\n        color: '#0F0F0F',\n      },\n    };\n\n    var rzp1 = new window.Razorpay(options);\n    rzp1.on('payment.failed', function (response3) {\n      console.log(response3.error);\n      alert(`There is some error with payment!`);\n    });\n    rzp1.open();\n  };\n  return (\n    <div className={classes.container}>\n      <Button onClick={payment} color=\"primary\" variant=\"contained\" className={classes.button}>Pay For An Appointment</Button>\n    </div>\n  );\n};\n\nexport default Pay;\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},{"ruleId":"44","severity":1,"message":"48","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"49","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":19},{"ruleId":"44","severity":1,"message":"50","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":24},{"ruleId":"44","severity":1,"message":"51","line":7,"column":8,"nodeType":"46","messageId":"47","endLine":7,"endColumn":16},{"ruleId":"44","severity":1,"message":"52","line":8,"column":8,"nodeType":"46","messageId":"47","endLine":8,"endColumn":25},{"ruleId":"44","severity":1,"message":"53","line":11,"column":8,"nodeType":"46","messageId":"47","endLine":11,"endColumn":17},{"ruleId":"44","severity":1,"message":"54","line":14,"column":8,"nodeType":"46","messageId":"47","endLine":14,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":86,"column":11,"nodeType":"46","messageId":"57","endLine":86,"endColumn":17},{"ruleId":"40","replacedBy":"58"},{"ruleId":"42","replacedBy":"59"},{"ruleId":"44","severity":1,"message":"60","line":38,"column":13,"nodeType":"46","messageId":"47","endLine":38,"endColumn":16},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'LocalHospitalIcon' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","no-redeclare","'config' is already defined.","redeclared",["61"],["62"],"'raw' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]